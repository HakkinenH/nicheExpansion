


##############################################
### SDM readme ###
##############################################



### META ###
	HHakkinen
	Complete Date: 01/07/2021
	University of Exeter
	Code repo used to support:
	"Plant naturalisations are constrained by temperature but released by precipitation"

This repo takes occurrence and environmental data for terrestrial plant species and identifies 
	1) whether the species expands its niche (using a principal components analysis
	2) if a species expands, what climatic direction does it expand in (wetter, hotter, drier etc.)
	3) how far does a species expand, i.e. in a given direction how far from the native niche does it expand

Once all individual species have been analysed, we further analyse:
	1) How many species overall expand?
	2) do species expand in some directions more often than others? (e.g. do most species expand into hotter climates)
	3) Do species expand in some directions to a greater degree than others? (e.g. when species expand towards hotter climates do they expand further on averge than others?)
	
On the way it produces various diagnostics, summary statistics and figures

### ###



### FOLDER STRUCTURE ###

	#Code
	This folder has all the R code used to process data, run analyses and run final analyses. See CODE section

	#FinalOutput
	This produces the final figures used in the paper. See OUTPUT section

	#IntermediateOutput
	For a variety of reasons we produce output that will not end up in the final paper. This includes diagnostics, summary statistics, descriptive figures etc. Each subfolder is named after the code that produces output. E.g. a code file named "GreenAnalysis.R" would produce intermediate output in "IntermediateOutput/GreenAnalysis"

	#RawData
	This condtains data used to run the code, not all raw data is included in this repository as it does not belong to the authors. In all cases we include notes on where data were downloaded from. See INPUT notes


### ### 



### INPUT ###
	The following data are needed to run the analysis, stored in RawData. Where this is generated by the authors it is included in the repo. Otherwise we just include a note on where to download the data from.
	All of the following need to be in place before running any code


	#BiogeographicZones
	We used biogeographic realms from Holt et al’s multi-taxonomic consensus map (2013), with an additional distinction between western and eastern Palearctic along the Ural mountains (see Appendix Fig. S1.1 in the Supporting Information). 
	To obtain this data see: Holt, Ben G., et al. "An update of Wallace’s zoogeographic regions of the world." Science 339.6115 (2013): 74-78.
	Save data in .shp format. By default the code will assume the file is called "biogeographic_zonesV2.shp"


	#GBIFoccurrence
	This is the GBIF occurrence data (in csv form)

		#raw
		These are the GBIF occurrence files exactly as downloaded. Expected to be "species name.csv"
		
		#rawClean
		These are the GBIF occurrence files after cleaning. We remove unverified points and errors. The following filters were applied to clean raw GBIF distribution data: each point was a presence, each point had a valid latitude and longitude with a coordinate precision >0.01 and uncertainty <10,000m, the basis of record was a living specimen, the year of occurrence was after 1970, the coordinates were not 0,0 nor at the exact centre of countries or capital cities, the coordinates were not in registered herbaria or museum locations, and that the occurrence was on land. This procedure was carried out using the “CoordinateCleaner” package in R (Zizka et al., 2019).
		Note out cleaning code is not included in the repo
		
		#desaggregated
		Desaggregating data is a long process so we seperated this out into its own step. This is occurrence data desaggregated to the resolution of interest (in our case 10 arc-minutes). This is the data that is used for PCA scripts etc.s


	#GlobalGrid
	This is WorldClim data that has been tidied into a single grid format, convenient quick loading and aligning. This is not included in the repo as the data does not belong to the authors, but we leave the code file to compile raw WorldClim files into the grid format.


	#RegionPCA
	Part of our process checks for analogue climate between regions, as such we need to create a whole region PCA. This is stored here, subfolders are named after the variable set (3Var = 3 variable PCA)

	#RegionPCACUT


	#speciesList
	This is the list of species to be used for analysis stored as a CSV. Species lists are often filtered and corrected so we include a column called "verdict" which states whether the species should be included in the final run or not


	#WorldClim
	These are the WorldClim variables used in the PCA. The "bio_10m_bil" is the raw data as downloaded. These data are not included as they do not belong to the authors. To download see: https://www.worldclim.org/data/bioclim.html
	We compile these variables into a single CSV. The name can be adjusted but by default the climate data is called "bioclim_3Var_10min_region.csv"



### ###




### CODE ###
The code is described in the order it will normally be run, not alphabetically

	#prepCode/stackBioclim.R
	Takes raw worldClim bioclim data (in .bil format) and stacks them into a single, stanardised CSV. Also adds labels on what region each point is in
	
	#PCA_find_analogue_byregion.R
	This takes 1) a species list 2) occurrence data (desaggreagated or not), stored in RawData/GBIF and 3) compiled WorldClim data in a csv file
	Before we run our expansion analysis we have to make sure we are making fair comparisons between native and naturalised occurrences. So we check for analogue space, and remove any occurrences that occur in non-analogue climate
	Output is stored in:
	
	#findRegionOutline.R
	As part of the next step (plant_PCA_expand.R) we need to estimate where the center of the naturalised niche is, and how "available" climate is in the naturalised realm
	To do this we need to create a PCA space of ALL climate that is available in the naturalised realm
	Therefore, this code builds the niche of each region on a global scale (so it can be fairly compared in the to the naturalised niche in plant_PCA_expand.R)
	It then saves this information for later in the form of a raster, this is the "outline" of each region's niche
	It needs:
	1) a species list in csv format, in PCA_find_analogue_byregion.R we generated a new one that tells us what species have enough data
	2) native occurrence data in csv format that has been filtered, so all data in non-analogue climate has been removed
	3) WorldClim data in csv format. By default the code assumes 3 variables, but it can be adjusted.
	
	
	#plant_PCA_expand.R
	This is the first main code chunk. It takes:
	1) a species list in csv format, in PCA_find_analogue_byregion.R we generated a new one that tells us what species have enough data
	2) native and naturalised occurrence data in csv format that has been filtered, so all data in non-analogue climate has been removed
	3) WorldClim data in csv format. By default the code assumes 3 variables, but it can be adjusted.
	It then constructs a native and naturalised niche in PCA space and compare the two. Any naturalised niche that falls outside of the native is "expansion"
	Expansion cells are analysed and we summarise how many there are, what direction they are (compared to the native niche center and naturalised niche center) and how far they are from the native and naturalised niche centers.
	It saves a lot of different outputs in IntermediateOutput/plant_PCA_expand, but doesn't produce a final summary table
	This is because it's complex and is often run in chunks. Instead we save each species result as a rstate file and compile them later
	
	



### ###


### OUTPUT ###


### ### 